{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Travel\\\\Travelfreak\\\\Travel freak\\\\Frontend\\\\src\\\\components\\\\Posts\\\\Post\\\\Post.js\";\nimport React, { useState } from \"react\";\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from \"@material-ui/core/\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport { useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { likePost, deletePost } from \"../../../actions/posts\";\nimport useStyles from \"./styles\";\n\nconst Post = ({\n  post,\n  setCurrentId\n}) => {\n  var _user$result, _user$result2, _user$result3, _user$result4, _user$result5;\n\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const [likes, setLikes] = useState(post === null || post === void 0 ? void 0 : post.likes);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const userId = (user === null || user === void 0 ? void 0 : user.result.googleId) || (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result._id);\n  const hasLikedPost = post.likes.find(like => like === userId);\n\n  const handleLike = async () => {\n    dispatch(likePost(post._id));\n\n    if (hasLikedPost) {\n      setLikes(post.likes.filter(id => id !== userId));\n    } else {\n      setLikes([...post.likes, userId]);\n    }\n  };\n\n  const Likes = () => {\n    if (likes.length > 0) {\n      return likes.find(like => like === userId) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StarIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }), \"\\xA0\", likes.length > 2 ? `You and ${likes.length - 1} others s` : `${likes.length} Star${likes.length > 1 ? \"s\" : \"\"}`) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StarBorderIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }), \"\\xA0\", likes.length, \" \", likes.length === 1 ? \"Star\" : \"Stars\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltOutlined, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), \"\\xA0Like\");\n  };\n\n  const openPost = e => {\n    // dispatch(getPost(post._id, history));\n    history.push(`/posts/${post._id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    raised: true,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    component: \"span\",\n    name: \"test\",\n    className: classes.cardAction,\n    onClick: openPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: post.selectedFile || \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\",\n    title: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, moment(post.createdAt).fromNow())), ((user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.googleId) === (post === null || post === void 0 ? void 0 : post.creator) || (user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3._id) === (post === null || post === void 0 ? void 0 : post.creator)) && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay2,\n    name: \"edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      e.stopPropagation();\n      setCurrentId(post._id);\n    },\n    style: {\n      color: \"white\"\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    fontSize: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, post.tags.map(tag => `#${tag} `))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, post.title), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, post.message.split(\" \").splice(0, 20).join(\" \"), \"...\"))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    disabled: !(user === null || user === void 0 ? void 0 : user.result),\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Likes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  })), ((user === null || user === void 0 ? void 0 : (_user$result4 = user.result) === null || _user$result4 === void 0 ? void 0 : _user$result4.googleId) === (post === null || post === void 0 ? void 0 : post.creator) || (user === null || user === void 0 ? void 0 : (_user$result5 = user.result) === null || _user$result5 === void 0 ? void 0 : _user$result5._id) === (post === null || post === void 0 ? void 0 : post.creator)) && /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"secondary\",\n    onClick: () => dispatch(deletePost(post._id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }), \" \\xA0 Delete\")));\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Travel/Travelfreak/Travel freak/Frontend/src/components/Posts/Post/Post.js"],"names":["React","useState","Card","CardActions","CardContent","CardMedia","Button","Typography","ButtonBase","ThumbUpAltIcon","StarBorderIcon","StarIcon","DeleteIcon","MoreHorizIcon","ThumbUpAltOutlined","useDispatch","moment","useHistory","likePost","deletePost","useStyles","Post","post","setCurrentId","user","JSON","parse","localStorage","getItem","likes","setLikes","dispatch","history","classes","userId","result","googleId","_id","hasLikedPost","find","like","handleLike","filter","id","Likes","length","openPost","e","push","card","cardAction","media","selectedFile","title","overlay","name","createdAt","fromNow","creator","overlay2","stopPropagation","color","details","tags","map","tag","message","split","splice","join","cardActions"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    Button,\r\n    Typography,\r\n    ButtonBase,\r\n} from \"@material-ui/core/\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { likePost, deletePost } from \"../../../actions/posts\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n    const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n    const [likes, setLikes] = useState(post?.likes);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const userId = user?.result.googleId || user?.result?._id;\r\n    const hasLikedPost = post.likes.find((like) => like === userId);\r\n\r\n    const handleLike = async () => {\r\n        dispatch(likePost(post._id));\r\n\r\n        if (hasLikedPost) {\r\n            setLikes(post.likes.filter((id) => id !== userId));\r\n        } else {\r\n            setLikes([...post.likes, userId]);\r\n        }\r\n    };\r\n\r\n    const Likes = () => {\r\n        if (likes.length > 0) {\r\n            return likes.find((like) => like === userId) ? (\r\n                <>\r\n                    <StarIcon fontSize=\"small\" />\r\n                    &nbsp;\r\n                    {likes.length > 2\r\n                        ? `You and ${likes.length - 1} others s`\r\n                        : `${likes.length} Star${likes.length > 1 ? \"s\" : \"\"}`}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <StarBorderIcon fontSize=\"small\" />\r\n                    &nbsp;{likes.length} {likes.length === 1 ? \"Star\" : \"Stars\"}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ThumbUpAltOutlined fontSize=\"small\" />\r\n                &nbsp;Like\r\n            </>\r\n        );\r\n    };\r\n\r\n    const openPost = (e) => {\r\n        // dispatch(getPost(post._id, history));\r\n\r\n        history.push(`/posts/${post._id}`);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card} raised elevation={6}>\r\n            <ButtonBase\r\n                component=\"span\"\r\n                name=\"test\"\r\n                className={classes.cardAction}\r\n                onClick={openPost}\r\n            >\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={\r\n                        post.selectedFile ||\r\n                        \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\r\n                    }\r\n                    title={post.title}\r\n                />\r\n                <div className={classes.overlay}>\r\n                    <Typography variant=\"h6\">{post.name}</Typography>\r\n                    <Typography variant=\"body2\">\r\n                        {moment(post.createdAt).fromNow()}\r\n                    </Typography>\r\n                </div>\r\n                {(user?.result?.googleId === post?.creator ||\r\n                    user?.result?._id === post?.creator) && (\r\n                    <div className={classes.overlay2} name=\"edit\">\r\n                        <Button\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                setCurrentId(post._id);\r\n                            }}\r\n                            style={{ color: \"white\" }}\r\n                            size=\"small\"\r\n                        >\r\n                            <MoreHorizIcon fontSize=\"default\" />\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n                <div className={classes.details}>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"h2\"\r\n                    >\r\n                        {post.tags.map((tag) => `#${tag} `)}\r\n                    </Typography>\r\n                </div>\r\n                <Typography\r\n                    className={classes.title}\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                >\r\n                    {post.title}\r\n                </Typography>\r\n                <CardContent>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                    >\r\n                        {post.message.split(\" \").splice(0, 20).join(\" \")}...\r\n                    </Typography>\r\n                </CardContent>\r\n            </ButtonBase>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    disabled={!user?.result}\r\n                    onClick={handleLike}\r\n                >\r\n                    <Likes />\r\n                </Button>\r\n                {(user?.result?.googleId === post?.creator ||\r\n                    user?.result?._id === post?.creator) && (\r\n                    <Button\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        onClick={() => dispatch(deletePost(post._id))}\r\n                    >\r\n                        <DeleteIcon fontSize=\"small\" /> &nbsp; Delete\r\n                    </Button>\r\n                )}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}