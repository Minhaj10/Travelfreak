{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Travel\\\\Travelfreak\\\\Travel freak\\\\Frontend\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport { useHistory } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport useStyles from \"./styles\";\nimport { purple, pink, orange, blueGrey } from \"@mui/material/colors\";\nimport { styled } from \"@mui/material/styles\";\nconst WhiteTextTypography = withStyles({\n  root: {\n    color: \"white\"\n  }\n})(Typography);\nconst CssTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"#9A9A9A\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"white\"\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"white\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#9A9A9A\"\n      }\n    }\n  }\n})(TextField);\nconst CssChipInput = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"white\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"#9A9A9A\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"white\"\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"white\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#9A9A9A\"\n      }\n    }\n  }\n})(ChipInput);\nconst ColorButton = styled(Button)(({\n  theme\n}) => ({\n  color: theme.palette.getContrastText(purple[500]),\n  backgroundColor: pink[800],\n  \"&:hover\": {\n    backgroundColor: orange[600]\n  }\n}));\nconst ClearButton = styled(Button)(({\n  theme\n}) => ({\n  color: theme.palette.getContrastText(blueGrey[500]),\n  backgroundColor: blueGrey[900],\n  \"&:hover\": {\n    backgroundColor: blueGrey[500]\n  }\n}));\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result3;\n\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: [],\n    selectedFile: \"\"\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: \"\",\n      message: \"\",\n      tags: [],\n      selectedFile: \"\"\n    });\n  };\n\n  useEffect(() => {\n    if (!(post === null || post === void 0 ? void 0 : post.title)) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }, history));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"Please Sign In to create your own Travel post and like other's post.\"));\n  }\n\n  const handleAddChip = tag => {\n    setPostData({ ...postData,\n      tags: [...postData.tags, tag]\n    });\n  };\n\n  const handleDeleteChip = chipToDelete => {\n    setPostData({ ...postData,\n      tags: postData.tags.filter(tag => tag !== chipToDelete)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    style: {\n      backgroundColor: \"white\",\n      boxShadow: \"0 0 3px 3px white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      gap: \"130px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(WhiteTextTypography, {\n    variant: \"h6\",\n    style: {\n      colour: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, currentId ? `Editing \"${post === null || post === void 0 ? void 0 : post.title}\"` : \"Creating a Post\"), /*#__PURE__*/React.createElement(CssTextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Headline\",\n    sx: {\n      input: {\n        color: \"red\"\n      }\n    },\n    InputLabelProps: {\n      style: {\n        color: \"purple\"\n      },\n      root: {\n        color: \"purple\"\n      }\n    },\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CssTextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Whats on your mind?\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    InputLabelProps: {\n      style: {\n        color: \"white\"\n      }\n    },\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"5px 0\",\n      width: \"98%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CssChipInput, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    style: {\n      borderBlockColor: \"white\"\n    },\n    fullWidth: true,\n    InputLabelProps: {\n      style: {\n        color: \"white\",\n        borderColor: \"white\"\n      }\n    },\n    value: postData.tags,\n    onAdd: chip => handleAddChip(chip),\n    onDelete: chip => handleDeleteChip(chip),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    InputLabelProps: {\n      style: {\n        color: \"white\"\n      }\n    },\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({ ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      gap: \"10px\",\n      paddingTop: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ClearButton, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }, \"Clear\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ColorButton, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 29\n    }\n  }, \"Submit\"))))));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Travel/Travelfreak/Travel freak/Frontend/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useHistory","ChipInput","withStyles","createPost","updatePost","useStyles","purple","pink","orange","blueGrey","styled","WhiteTextTypography","root","color","CssTextField","borderBottomColor","borderColor","CssChipInput","ColorButton","theme","palette","getContrastText","backgroundColor","ClearButton","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","history","clear","handleSubmit","e","preventDefault","name","result","paper","handleAddChip","tag","handleDeleteChip","chipToDelete","filter","form","boxShadow","display","flexWrap","justifyContent","gap","colour","input","style","target","value","padding","width","borderBlockColor","chip","fileInput","base64","paddingTop","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\nimport useStyles from \"./styles\";\r\nimport { purple, pink, orange, blueGrey } from \"@mui/material/colors\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst WhiteTextTypography = withStyles({\r\n    root: {\r\n        color: \"white\",\r\n    },\r\n})(Typography);\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        \"& label.Mui-focused\": {\r\n            color: \"white\",\r\n        },\r\n        \"& .MuiInput-underline:after\": {\r\n            borderBottomColor: \"#9A9A9A\",\r\n        },\r\n        \"& .MuiOutlinedInput-root\": {\r\n            \"& fieldset\": {\r\n                borderColor: \"white\",\r\n            },\r\n            \"&:hover fieldset\": {\r\n                borderColor: \"white\",\r\n            },\r\n            \"&.Mui-focused fieldset\": {\r\n                borderColor: \"#9A9A9A\",\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst CssChipInput = withStyles({\r\n    root: {\r\n        \"& label.Mui-focused\": {\r\n            color: \"white\",\r\n        },\r\n        \"& .MuiInput-underline:after\": {\r\n            borderBottomColor: \"#9A9A9A\",\r\n        },\r\n        \"& .MuiOutlinedInput-root\": {\r\n            \"& fieldset\": {\r\n                borderColor: \"white\",\r\n            },\r\n            \"&:hover fieldset\": {\r\n                borderColor: \"white\",\r\n            },\r\n            \"&.Mui-focused fieldset\": {\r\n                borderColor: \"#9A9A9A\",\r\n            },\r\n        },\r\n    },\r\n})(ChipInput);\r\n\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: pink[800],\r\n    \"&:hover\": {\r\n        backgroundColor: orange[600],\r\n    },\r\n}));\r\n\r\nconst ClearButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText(blueGrey[500]),\r\n    backgroundColor: blueGrey[900],\r\n    \"&:hover\": {\r\n        backgroundColor: blueGrey[500],\r\n    },\r\n}));\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const [postData, setPostData] = useState({\r\n        title: \"\",\r\n        message: \"\",\r\n        tags: [],\r\n        selectedFile: \"\",\r\n    });\r\n    const post = useSelector((state) =>\r\n        currentId\r\n            ? state.posts.posts.find((message) => message._id === currentId)\r\n            : null\r\n    );\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n    const history = useHistory();\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({ title: \"\", message: \"\", tags: [], selectedFile: \"\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!post?.title) clear();\r\n        if (post) setPostData(post);\r\n    }, [post]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (currentId === 0) {\r\n            dispatch(\r\n                createPost({ ...postData, name: user?.result?.name }, history)\r\n            );\r\n            clear();\r\n        } else {\r\n            dispatch(\r\n                updatePost(currentId, { ...postData, name: user?.result?.name })\r\n            );\r\n            clear();\r\n        }\r\n    };\r\n\r\n    if (!user?.result?.name) {\r\n        return (\r\n            <Paper className={classes.paper} elevation={6}>\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    Please Sign In to create your own Travel post and like\r\n                    other's post.\r\n                </Typography>\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    const handleAddChip = (tag) => {\r\n        setPostData({ ...postData, tags: [...postData.tags, tag] });\r\n    };\r\n\r\n    const handleDeleteChip = (chipToDelete) => {\r\n        setPostData({\r\n            ...postData,\r\n            tags: postData.tags.filter((tag) => tag !== chipToDelete),\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form\r\n            autoComplete=\"off\"\r\n            noValidate\r\n            className={`${classes.root} ${classes.form}`}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <Paper\r\n                className={classes.paper}\r\n                elevation={6}\r\n                style={{\r\n                    backgroundColor: \"white\",\r\n                    boxShadow: \"0 0 3px 3px white\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexWrap: \"wrap\",\r\n                        justifyContent: \"space-around\",\r\n                        gap: \"130px\",\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <WhiteTextTypography\r\n                            variant=\"h6\"\r\n                            style={{ colour: \"white\" }}\r\n                        >\r\n                            {currentId\r\n                                ? `Editing \"${post?.title}\"`\r\n                                : \"Creating a Post\"}\r\n                        </WhiteTextTypography>\r\n                        <CssTextField\r\n                            name=\"title\"\r\n                            variant=\"outlined\"\r\n                            label=\"Headline\"\r\n                            sx={{ input: { color: \"red\" } }}\r\n                            InputLabelProps={{\r\n                                style: { color: \"purple\" },\r\n                                root: {\r\n                                    color: \"purple\",\r\n                                },\r\n                            }}\r\n                            fullWidth\r\n                            value={postData.title}\r\n                            onChange={(e) =>\r\n                                setPostData({\r\n                                    ...postData,\r\n                                    title: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <CssTextField\r\n                            name=\"message\"\r\n                            variant=\"outlined\"\r\n                            label=\"Whats on your mind?\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={4}\r\n                            InputLabelProps={{\r\n                                style: { color: \"white\" },\r\n                            }}\r\n                            value={postData.message}\r\n                            onChange={(e) =>\r\n                                setPostData({\r\n                                    ...postData,\r\n                                    message: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <div style={{ padding: \"5px 0\", width: \"98%\" }}>\r\n                            <CssChipInput\r\n                                name=\"tags\"\r\n                                variant=\"outlined\"\r\n                                label=\"Tags\"\r\n                                style={{ borderBlockColor: \"white\" }}\r\n                                fullWidth\r\n                                InputLabelProps={{\r\n                                    style: {\r\n                                        color: \"white\",\r\n                                        borderColor: \"white\",\r\n                                    },\r\n                                }}\r\n                                value={postData.tags}\r\n                                onAdd={(chip) => handleAddChip(chip)}\r\n                                onDelete={(chip) => handleDeleteChip(chip)}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.fileInput}>\r\n                            <FileBase\r\n                                type=\"file\"\r\n                                InputLabelProps={{\r\n                                    style: { color: \"white\" },\r\n                                }}\r\n                                multiple={false}\r\n                                onDone={({ base64 }) =>\r\n                                    setPostData({\r\n                                        ...postData,\r\n                                        selectedFile: base64,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flexWrap: \"wrap\",\r\n                            justifyContent: \"center\",\r\n                            gap: \"10px\",\r\n                            paddingTop: \"300px\",\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <ClearButton\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                size=\"small\"\r\n                                onClick={clear}\r\n                                fullWidth\r\n                            >\r\n                                Clear\r\n                            </ClearButton>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <ColorButton\r\n                                className={classes.buttonSubmit}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                            >\r\n                                Submit\r\n                            </ColorButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}