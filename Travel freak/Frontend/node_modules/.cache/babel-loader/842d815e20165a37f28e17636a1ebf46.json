{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Travel\\\\Travelfreak\\\\Travel freak\\\\Frontend\\\\src\\\\components\\\\PostDetails\\\\CommentSection.jsx\";\nimport React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\nimport { commentPost } from '../../actions/posts';\nimport useStyles from './styles';\nimport { purple, pink, orange } from '@mui/material/colors';\nimport { styled } from '@mui/material/styles';\nconst ColorButton = styled(Button)(({\n  theme\n}) => ({\n  color: theme.palette.getContrastText(purple[500]),\n  backgroundColor: \"#22556B\",\n  '&:hover': {\n    backgroundColor: orange[600]\n  }\n}));\n\nconst CommentSection = ({\n  post\n}) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const classes = useStyles();\n  const commentsRef = useRef();\n\n  const handleComment = async () => {\n    var _user$result;\n\n    const newComments = await dispatch(commentPost(`${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name}: ${comment}`, post._id));\n    setComment('');\n    setComments(newComments);\n    commentsRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsOuterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsInnerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Comments\"), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, c.split(': ')[0]), c.split(':')[1])), /*#__PURE__*/React.createElement(\"div\", {\n    ref: commentsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '70%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Write a comment\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    rows: 4,\n    variant: \"outlined\",\n    label: \"Comment\",\n    multiline: true,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ColorButton, {\n    style: {\n      marginTop: '10px'\n    },\n    fullWidth: true,\n    disabled: !comment.length,\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Comment\"))));\n};\n\nexport default CommentSection;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Travel/Travelfreak/Travel freak/Frontend/src/components/PostDetails/CommentSection.jsx"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","commentPost","useStyles","purple","pink","orange","styled","ColorButton","theme","color","palette","getContrastText","backgroundColor","CommentSection","post","user","JSON","parse","localStorage","getItem","comment","setComment","dispatch","comments","setComments","classes","commentsRef","handleComment","newComments","result","name","_id","current","scrollIntoView","behavior","commentsOuterContainer","commentsInnerContainer","map","c","i","split","width","e","target","value","marginTop","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Typography, TextField, Button } from '@material-ui/core/';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { commentPost } from '../../actions/posts';\r\nimport useStyles from './styles';\r\nimport { purple,pink,orange } from '@mui/material/colors';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n  color: theme.palette.getContrastText(purple[500]),\r\n  backgroundColor: \"#22556B\",\r\n  '&:hover': {\r\n    backgroundColor: orange[600],\r\n  },\r\n}));\r\n\r\n\r\nconst CommentSection = ({ post }) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const [comment, setComment] = useState('');\r\n  const dispatch = useDispatch();\r\n  const [comments, setComments] = useState(post?.comments);\r\n  const classes = useStyles();\r\n  const commentsRef = useRef();\r\n\r\n  const handleComment = async () => {\r\n    const newComments = await dispatch(commentPost(`${user?.result?.name}: ${comment}`, post._id));\r\n\r\n    setComment('');\r\n    setComments(newComments);\r\n\r\n    commentsRef.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.commentsOuterContainer}>\r\n        <div className={classes.commentsInnerContainer}>\r\n          <Typography gutterBottom variant=\"h6\">Comments</Typography>\r\n          {comments?.map((c, i) => (\r\n            <Typography key={i} gutterBottom variant=\"subtitle1\">\r\n              <strong>{c.split(': ')[0]}</strong>\r\n              {c.split(':')[1]}\r\n            </Typography>\r\n          ))}\r\n          <div ref={commentsRef} />\r\n        </div>\r\n        <div style={{ width: '70%' }}>\r\n          <Typography gutterBottom variant=\"h6\">Write a comment</Typography>\r\n          <TextField fullWidth rows={4} variant=\"outlined\" label=\"Comment\" multiline value={comment} onChange={(e) => setComment(e.target.value)} />\r\n          <br />\r\n          <ColorButton style={{ marginTop: '10px' }} fullWidth disabled={!comment.length} color=\"primary\" variant=\"contained\" onClick={handleComment}>\r\n            Comment\r\n          </ColorButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentSection;\r\n"]},"metadata":{},"sourceType":"module"}